#include <iostream>
using namespace std;

#define MAX 10
#define INF 10000

int main() {
    int n, start;
    int graph[MAX][MAX];
    int dist[MAX];
    bool visited[MAX];

    cout << "Enter number of places (nodes): ";
    cin >> n;

    cout << "Enter graph matrix (cost between places, 0 if no direct road):\n";
    for(int i = 0; i < n; i++) {
        for(int j = 0; j < n; j++) {
            cin >> graph[i][j];
            if(graph[i][j] == 0 && i != j)
                graph[i][j] = INF;
        }
    }

    cout << "Enter starting point (0 to " << n-1 << "): ";
    cin >> start;

    for(int i = 0; i < n; i++) {
        dist[i] = INF;
        visited[i] = false;
    }
    dist[start] = 0;

    for(int count = 0; count < n; count++) {
        int minDist = INF;
        int u = -1;

        for(int i = 0; i < n; i++) {
            if(!visited[i] && dist[i] < minDist) {
                minDist = dist[i];
                u = i;
            }
        }

        visited[u] = true;

        for(int v = 0; v < n; v++) {
            if(!visited[v] && graph[u][v] != INF && dist[u] + graph[u][v] < dist[v]) {
                dist[v] = dist[u] + graph[u][v];
            }
        }
    }

    cout << "\nShortest distances from " << start << ":\n";
    for(int i = 0; i < n; i++) {
        if(dist[i] == INF)
            cout << i << ": Not reachable\n";
        else
            cout << i << ": " << dist[i] << "\n";
    }

    return 0;
}
